swagger: "2.0"
info:
  description: "Documentação para a API do sistema LedsZeppellin "
  version: "1.0.0"
  title: "LedsZeppellin API"
  contact:
    email: "andre.sp.leao@gmail.com"
host: "leds-zeppellin-api.herokuapp.com"
basePath: "/api/v1/"
schemes:
- "https"
produces:
  - application/json
paths:
  /users:
    get:
      summary: Lista de Usuários do sistema
      description: Lista **todos** os Usuários cadastrados no sistema
      tags:
        - Users
      responses:
        200:
          description: Uma lista (Array) de Usuários.
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Erro inesperado
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Cria um usuário
      description: Cria um usuário no sistema
      parameters:
        - name: user
          in: body
          description: Usuário
          required: true
          schema:
            $ref: '#/definitions/UserInput'
      tags:
        - Users
      responses:
        201:
          description: Usuário cadastrado com sucesso!
          schema:
            $ref: '#/definitions/User'
        default:
          description: Erro inesperado
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Atualiza um usuário
      description: Atualiza um usuário no sistema
      parameters:
        - name: user
          in: body
          description: Usuário
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - Users
      responses:
        200:
          description: Usuário atualizado com sucesso!
          schema:
            $ref: '#/definitions/User'
        404:
          description: Usuário não econtrado! Lembre-se de informar o ID.
        default:
          description: Erro inesperado
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Atualiza um usuário
      description: Atualiza um usuário no sistema
      parameters:
        - name: user
          in: body
          description: Usuário
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - Users
      responses:
        200:
          description: Usuário atualizado com sucesso!
          schema:
            $ref: '#/definitions/User'
        404:
          description: Usuário não econtrado! Lembre-se de informar o ID.
        default:
          description: Erro inesperado
          schema:
            $ref: '#/definitions/Error'
  /users/{id}:
    get:
      summary: Mostra apenas um usuario.
      description: Mostra **apenas um usuario de acordo com o numero id passado por parâmetro**
      parameters:
        - name: id
          in: path
          description: ID do usuário
          required: true
          type: integer
      tags:
        - Users
      responses:
        200:
          description: Usuário encontrado.
          schema:
            $ref: '#/definitions/User'
        default:
          description: Erro inesperado
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Apagar um usuario.
      description: Apaga **um usuario de acordo com o numero id passado por parâmetro**
      parameters:
        - name: id
          in: path
          description: ID do usuário
          required: true
          type: integer
      tags:
        - Users
      responses:
        200:
          description: Usuário exlcuído com sucesso.
          schema:
            $ref: '#/definitions/User'
        410:
          description: Este usuário não existe mais.
        404:
          description: Usuário não econtrado! Lembre-se de informar o ID.
        default:
          description: Erro inesperado
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    type: "object"
    required:
      - username
      - email
      - password
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  UserInput:
    type: "object"
    required:
      - username
      - email
      - password
    properties:
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

